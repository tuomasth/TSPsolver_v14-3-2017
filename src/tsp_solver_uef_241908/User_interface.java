package tsp_solver_uef_241908;

import java.awt.BorderLayout;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.WindowConstants;
import javax.swing.text.BadLocationException;

/**
 * 
 * The user interface class.
 * 
 * NetBeans 8
 * 
 * @author tuohy
 * @version 14-3-17
 */
public class User_interface extends javax.swing.JFrame {

    final String VERSION = "v14-3-17";
    
    /**
     * Constructor that creates new form User_interface.
     */
    public User_interface() {
        initComponents();
        setWindow();
    }
    
    /**
     * Sets properties of the user interface window and detects pressing enter.
     */
    public final void setWindow() {
        setLocationRelativeTo(null);
        setTitle("TSP Solver " + VERSION);
        setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
    	addWindowListener(new WindowAdapter(){
            /**
             * windowClosing
             * @param we WindowEvent
             */
            @Override
            public void windowClosing(WindowEvent we){
                int choice = JOptionPane.showConfirmDialog(null, 
                            "Unsaved data will be lost. Exit TSP Solver?", 
                            "Exit", 
                            JOptionPane.YES_NO_OPTION);
                if(choice == 0)
                    System.exit(0);
            }
    	});
        jTextArea1.addKeyListener(new KeyAdapter() {
            /**
             * keyPressed
             * @param e KeyEvent
             */
            @Override
            public void keyPressed(KeyEvent e) {
                if(e.getKeyCode() == KeyEvent.VK_ENTER && 
                        jTextArea1.getText().length() > 0 ) {
                    int number = 0;
                    try {
                        int offset=jTextArea1.getLineOfOffset(
                                jTextArea1.getCaretPosition());
                        int start=jTextArea1.getLineStartOffset(offset);
                        int end=jTextArea1.getLineEndOffset(offset);
                        if(jTextArea1.getText(start, 
                                (end-start)).charAt(0) > 48 &&      // from '1' 
                           jTextArea1.getText(start, 
                                   (end-start)).charAt(0) < 58) {   // to '9' 
                            String s = jTextArea1.getText(start, (end-start));
                            Matcher matcher = Pattern.compile("\\d+").matcher(s);
                            matcher.find();
                            try{
                                number = Integer.valueOf(matcher.group());
                                if(number < Integer.MAX_VALUE) {
                                    number++;
                                }
                            }
                            catch(Exception ex) {
                                System.err.println(ex.getMessage());
                            }
                            jTextArea1.insert(number + " \n", 
                                    jTextArea1.getCaretPosition()+1);
                        }
                    }
                    catch (BadLocationException ex) {
                        System.err.println(ex.getMessage());
                    }
                }
            }
            /**
             * keyTyped
             * @param e KeyEvent
             */
            @Override
            public void keyTyped(KeyEvent e) {
            }
            /**
             * keyReleased
             * @param e KeyEvent
             */
            @Override
            public void keyReleased(KeyEvent e) {
                if(e.getKeyCode() == KeyEvent.VK_ENTER && 
                   jTextArea1.getCaretPosition() != 
                        jTextArea1.getDocument().getLength()) {
                    jTextArea1.replaceRange("", jTextArea1.getCaretPosition(), 
                            jTextArea1.getCaretPosition()+1);
                    jTextArea1.setCaretPosition(jTextArea1.getText().length());
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemNew = new javax.swing.JMenuItem();
        jMenuItemOpen = new javax.swing.JMenuItem();
        jMenuItemSave = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuRun = new javax.swing.JMenu();
        jMenuItemNNH = new javax.swing.JMenuItem();
        jMenuItem2MST = new javax.swing.JMenuItem();
        jMenuItemCHH = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTabbedPane1.addTab("Editor", jScrollPane1);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jMenuFile.setText("File");

        jMenuItemNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNew.setText("New");
        jMenuItemNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemNew);

        jMenuItemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemOpen.setText("Open");
        jMenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemOpen);

        jMenuItemSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSave.setText("Save");
        jMenuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemSave);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBar1.add(jMenuFile);

        jMenuRun.setText("Run");

        jMenuItemNNH.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuItemNNH.setText("Nearest Neighbor Algorithm");
        jMenuItemNNH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNNHActionPerformed(evt);
            }
        });
        jMenuRun.add(jMenuItemNNH);

        jMenuItem2MST.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jMenuItem2MST.setText("2-MST Algorithm with Prim");
        jMenuItem2MST.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2MSTActionPerformed(evt);
            }
        });
        jMenuRun.add(jMenuItem2MST);

        jMenuItemCHH.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, 0));
        jMenuItemCHH.setText("Convex Hull Algorithm");
        jMenuItemCHH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCHHActionPerformed(evt);
            }
        });
        jMenuRun.add(jMenuItemCHH);

        jMenuBar1.add(jMenuRun);

        jMenuHelp.setText("Help");

        jMenuItemAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItemAbout.setText("About");
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItemAbout);

        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Exit option.
     * @param evt ActionEvent
     */
    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        int choice = JOptionPane.showConfirmDialog(null,
                                "Unsaved data will be lost. Exit TSP Solver?",
                                "Exit",
                                JOptionPane.YES_NO_OPTION);
        switch(choice){
            case 0:
                System.exit(0);
                break;
            case 1:
                break;
        }
    }//GEN-LAST:event_jMenuItemExitActionPerformed
    /**
     * New option.
     * @param evt ActionEvent
     */
    private void jMenuItemNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewActionPerformed
        String basic_info = "NAME : \n" + 
                        "COMMENT : \n" + 
                        "TYPE : TSP\n" + 
                        //"DIMENSION : 5\n" + 
                        "EDGE_WEIGHT_TYPE : EUC_2D\n" + 
                        "NODE_COORD_SECTION \n" + 
                        "1 3 4 \n" + 
                        "2 1 5 \n" + 
                        "3 1 1 \n" + 
                        "4 5 1 \n" + 
                        "5 5 5 \n" + 
                        "EOF";
        jTextArea1.setText(basic_info);
        // An useful online graph visualizer: 
        // https://plot.ly/alpha/workspace/ (29.10.2016) 
    }//GEN-LAST:event_jMenuItemNewActionPerformed
    /**
     * Open option.
     * @param evt ActionEvent
     */
    private void jMenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenActionPerformed
        int x;								
    	JTextField txtfield = new JTextField(44);
    	Object[] choiceobj = {txtfield, "Open tsp"};
    	do{
            int z = JOptionPane.showOptionDialog(null,
                "Write file name without file name extension (.tsp):\n",
                "Open tsp",
                JOptionPane.PLAIN_MESSAGE,
                3, null,
                choiceobj,
                choiceobj[0]);
            x = -1;
            if (z == JOptionPane.CLOSED_OPTION) {
                return;
            }
            if (txtfield.getText().length() < 1){
                x = 0;
                JOptionPane.showMessageDialog(null,
                "File name cannot be 0 characters long.",
                "Error",
                JOptionPane.ERROR_MESSAGE);
            }
    	} while(x!=-1);
        File file = new File(txtfield.getText() + ".tsp");
        if(!file.exists()){
            return;
        }
        if(file.isDirectory()){
            return;
        }
        if(!file.canRead()){
            return;
        }
        try(FileInputStream fis_file = new FileInputStream(
            String.valueOf(file)); 
            ObjectInputStream ois_file = 
            new ObjectInputStream(fis_file)) {
            jTextArea1.setText((String)ois_file.readObject());
        }
        catch(IOException | ClassNotFoundException e){
            System.err.println(e);
        }
    }//GEN-LAST:event_jMenuItemOpenActionPerformed
    /**
     * Save option.
     * @param evt ActionEvent
     */
    private void jMenuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveActionPerformed
        int x;							
    	JTextField txtfield = new JTextField(44);
    	Object[] choiceobj = {txtfield, "Save tsp"};
    	do{
            int z = JOptionPane.showOptionDialog(null,
                "Write file name without file name extension (.tsp):\n",
                "Save tsp",
                JOptionPane.PLAIN_MESSAGE,
                3, null,
                choiceobj,
                choiceobj[0]);
            x = -1;
            if (z == JOptionPane.CLOSED_OPTION) {
                return;
            }
            if (txtfield.getText().length() < 1){
                x = 0;
                JOptionPane.showMessageDialog(null,
                "File name cannot be 0 characters long.",
                "Error",
                JOptionPane.ERROR_MESSAGE);
            }
    	} while(x!=-1);
    	File file = new File(txtfield.getText() + ".tsp");
    	int sav_choice;
    	if(file.exists()){
            sav_choice = JOptionPane.showConfirmDialog(null,
            "File already exists. Overwrite?",
            "Save",
            JOptionPane.YES_NO_OPTION);
    	}
    	else{
            try(FileOutputStream fosFile = 
                    new FileOutputStream(file); 
                    ObjectOutputStream oosFile = 
                        new ObjectOutputStream(fosFile)) {
                        oosFile.writeObject(jTextArea1.getText());
                        oosFile.flush();
            }
            catch(Exception e){
                System.err.println(e);
            }
            return;
    	}
        switch(sav_choice){
            case 0:
                try(FileOutputStream fosFile = 
                    new FileOutputStream(file); 
                    ObjectOutputStream oosFile = 
                        new ObjectOutputStream(fosFile)) {
                        oosFile.writeObject(
                            jTextArea1.getText());
                        oosFile.flush();
                }
                catch(Exception e){
                    System.err.println(e);
                }
                break;
            case 1: // do nothing 
        }
    }//GEN-LAST:event_jMenuItemSaveActionPerformed
    /**
     * Calling the NNH.
     * @param evt ActionEvent
     */
    private void jMenuItemNNHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNNHActionPerformed
        String result = TSP_Solver_UEF_241908.NearestNeighbour_Algorithm(
            jTextArea1.getText());
        jTextArea2.setText(result);
    }//GEN-LAST:event_jMenuItemNNHActionPerformed
    /**
     * Calling the 2MST (Prim).
     * @param evt ActionEvent
     */
    private void jMenuItem2MSTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2MSTActionPerformed
        String result = TSP_Solver_UEF_241908.DoubleMST_Algorithm_Prim(
                jTextArea1.getText());
        jTextArea2.setText(result);
    }//GEN-LAST:event_jMenuItem2MSTActionPerformed
    /**
     * Calling the CHH.
     * @param evt ActionEvent
     */
    private void jMenuItemCHHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCHHActionPerformed
        String result = TSP_Solver_UEF_241908.ConvexHull_Algorithm(
                jTextArea1.getText());
        jTextArea2.setText(result);
    }//GEN-LAST:event_jMenuItemCHHActionPerformed
    /**
     * About option.
     * @param evt ActionEvent
     */
    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
        JDialog about = new JDialog();
        about.setSize(320, 95);
        about.setLocationRelativeTo(null);
        about.setResizable(false);
        about.setTitle("About");
        JLabel txt1 = new JLabel(
                "  TSP Solver " + VERSION + "  © Tuomas Hyvönen 2017 ");
        JLabel txt2 = new JLabel("  University of Eastern Finland       ");
        about.add(txt1, BorderLayout.NORTH);
        about.add(txt2, BorderLayout.CENTER);
        about.setAlwaysOnTop(true);
        about.setVisible(true);
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItem2MST;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemCHH;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemNNH;
    private javax.swing.JMenuItem jMenuItemNew;
    private javax.swing.JMenuItem jMenuItemOpen;
    private javax.swing.JMenuItem jMenuItemSave;
    private javax.swing.JMenu jMenuRun;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}